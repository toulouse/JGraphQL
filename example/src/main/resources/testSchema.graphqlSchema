interface Foo @directive(argument: 1) {
    name: String @directive(argument: 2)
}

interface Bar  @directive(argument: 3) {
    name: String
    description: String
}

type Baz : Foo, Bar  @directive(argument: 4) {
    name: String
    description: String!
    type: String
    whatever(parameter : String = "somestuff", parameter2 : Boolean = false): String
    floatTest(aFloat : Float = 9.0e34): String
    arrayNonNullTest: [String!]!
}

scalar SomeScalar @directive(argument: 5)

union FooOrBazOrSomeScalar  @directive(argument: 6) = Foo @directive(argument: 7) | Baz @directive(argument: 8) | SomeScalar

enum SomeEnum {
    A1, B2 @directive(argument: 9), C3
    D4, E5,
    F6
}

input SomeInput {
    name: Float = 3.0e9 
    description: Int = 30
}
